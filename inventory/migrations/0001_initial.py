# Generated by Django 4.2.7 on 2025-01-30 11:01

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('phone_number_2', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('address', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('phone_number_2', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('address', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, help_text='Company logo image', null=True, upload_to='company_logos/')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('sku', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('description', models.TextField(blank=True)),
                ('stock', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('reorder_level', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('purchase_price', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('sale_price', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('receipt_number', models.UUIDField(default=uuid.uuid4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.company')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('invoice_number', models.UUIDField(default=uuid.uuid4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.client')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.company')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('phone_number_2', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('address', models.TextField(blank=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.company')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('symbol', models.CharField(max_length=10)),
                ('conversion_factor', models.DecimalField(decimal_places=4, default=1, help_text='Multiplier to convert to base unit', max_digits=15)),
                ('base_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_units', to='inventory.unit')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.company')),
            ],
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.sale')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.unit')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.product')),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.purchase')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.unit')),
            ],
        ),
        migrations.AddField(
            model_name='purchase',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.vendor'),
        ),
        migrations.CreateModel(
            name='ProductionOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('PLANNED', 'Planned'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='PLANNED', max_length=20)),
                ('quantity_produced', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('good_quantity', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('damaged_quantity', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('notes', models.TextField(blank=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.company')),
                ('output_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productions', to='inventory.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductionInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planned_quantity', models.DecimalField(blank=True, decimal_places=4, max_digits=15)),
                ('actual_used', models.DecimalField(blank=True, decimal_places=4, max_digits=15)),
                ('wastage', models.DecimalField(decimal_places=4, default=0, max_digits=15)),
                ('quality_status', models.CharField(choices=[('GOOD', 'Good'), ('DAMAGED', 'Damaged'), ('EXCESS', 'Excess'), ('SHORT', 'Short')], default='GOOD', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('production_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inputs', to='inventory.productionorder')),
                ('raw_material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.product')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.unit')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='allowed_units',
            field=models.ManyToManyField(related_name='allowed_products', to='inventory.unit'),
        ),
        migrations.AddField(
            model_name='product',
            name='base_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.unit'),
        ),
        migrations.AddField(
            model_name='product',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.company'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrator'), ('MANAGER', 'Manager'), ('STAFF', 'Regular Staff')], default='STAFF', max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.company')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='inventory_users', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='inventory_users_perms', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.company'),
        ),
    ]
